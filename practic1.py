# Для проверки правильности выполнения задания запустить команду в терминале находясь в папке с файлами: python test.py -v

# Модуль 1: Списки
# Напишите функцию, которая принимает список целых чисел и возвращает новый список, 
# содержащий только чётные числа из исходного, в том же порядке.

# Пример: [1, 2, 4, 5, 6] -> [2, 4, 6]

def get_even_numbers(numbers: list) -> list:
    # TODO: реализуйте функцию
    pass

# Модуль 2: Условия
# Напишите функцию, которая принимает целое число n и возвращает строку: 

#     "positive even" — если число положительное и чётное  
#     "positive odd" — если положительное и нечётное  
#     "negative" — если отрицательное (чётность не важна)  
#     "zero" — если число равно нулю

# Пример: 5 -> positive odd

def categorize_number(n: int) -> str:
    # TODO: реализуйте функцию
    pass

# Модуль 3: Функции
# Напишите функцию, которая принимает два числа a, b
# и строку op — операцию: "+", "-", "*", "/".
# Функция должна вернуть результат применения операции.
# Если op не поддерживается — вернуть None.
# При делении на ноль — вернуть None.

# Пример: 2, 7, * -> 14

def apply_operation(a: float, b: float, op: str) -> float:
    # TODO: реализуйте функцию
    pass

# Модуль 4: Строки
# Напишите функцию, которая принимает строку sentence и возвращает новую строку, 
# в которой каждое слово перевёрнуто, но порядок слов остаётся прежним.

# Слова разделены ровно одним пробелом, других пробелов нет.

# Пример: Hello World! -> olleH !dlroW 

def reverse_words(sentence: str) -> str:
    # TODO: реализуйте функцию
    pass

# Модуль 5: Словари
# Напишите функцию, которая считает частоту каждого символа в строке text (регистр важен!).
# Возвращает словарь, где ключ — символ, значение — количество его вхождений.
# Пробелы и знаки препинания тоже учитываются.

# Пример: Hello Leon -> {H: 1, e: 2, l: 2, o: 2, L: 1, n: 1}

def count_char_frequencies(text: str) -> dict:
    # TODO: реализуйте функцию
    pass